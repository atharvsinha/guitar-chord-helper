{"version":3,"sources":["img/search.svg","App.tsx","index.tsx"],"names":["notes","notesMinor","App","GuitarChords","chord","height","alternate","quality","useState","style","cursor","input","setInput","className","type","placeholder","value","onInput","event","String","length","toUpperCase","slice","capitalise","target","alt","src","search","map","i","includes","chordDisplay","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,MAA0B,mC,OCKnCA,EAAQ,CAAC,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,MACpEC,EAAa,CACjB,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,OA6IaC,MArIf,WACE,IAqGMC,EAAe,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,QAA2B,EAC/CC,oBAAS,GADsC,6BAE3E,OACE,cAAC,IAAD,CACEJ,MAAOA,EACPC,OAAQA,EACRE,QAASA,EACTD,UAAWA,EACXG,MAAO,CAAEC,OAAQ,cA9GV,EAkHaF,mBAAS,IAlHtB,mBAkHNG,EAlHM,KAkHCC,EAlHD,KAmHb,OACE,sBAAKC,UAAU,cAAf,UACE,qBAAKA,UAAU,UAAf,2BACA,uBACEC,KAAK,OACLC,YAAY,SACZF,UAAU,YACVG,MAAOL,EACPM,QAAS,SAACC,GAAD,OACPN,EAlIS,SAACD,GAClB,OAA6B,IAAzBQ,OAAOR,GAAOS,OAAqB,GACb,IAAjBT,EAAMS,OAAqBT,EAAMU,cACjCV,EAAMS,OAAS,EAAUT,EAAM,GAAGU,cAAgBV,EAAMW,MAAM,GAC3D,KA8HKC,CAAYL,EAAMM,OAA4BR,WAG3D,qBAAKH,UAAU,aAAaY,IAAI,aAAaC,IAAKC,IA9HjC,SAAChB,GACpB,MAAc,KAAVA,EAEA,sBAAKE,UAAU,QAAf,UACGb,EAAM4B,KAAI,SAACC,GACV,OACE,cAAC1B,EAAD,CACEC,MAAOyB,EACPxB,OAAO,OACPE,QAAQ,MACRD,WAAW,OAIhBN,EAAM4B,KAAI,SAACC,GACV,OACE,cAAC1B,EAAD,CACEC,MAAOyB,EACPxB,OAAO,OACPE,QAAQ,MACRD,WAAW,OAIhBN,EAAM4B,KAAI,SAACC,GACV,OACE,cAAC1B,EAAD,CACEC,MAAOyB,EACPxB,OAAO,OACPC,WAAW,EACXC,QAAQ,WAIbP,EAAM4B,KAAI,SAACC,GACV,OACE,cAAC1B,EAAD,CACEC,MAAOyB,EACPxB,OAAO,OACPE,QAAQ,MACRD,WAAW,UAMZN,EAAM8B,SAASnB,GAEtB,sBAAKE,UAAU,QAAf,UACE,cAACV,EAAD,CACEC,MAAOO,EACPN,OAAO,OACPE,QAAQ,MACRD,WAAW,IAEb,cAACH,EAAD,CACEC,MAAOO,EACPN,OAAO,OACPE,QAAQ,MACRD,WAAW,IAEb,cAACH,EAAD,CACEC,MAAOO,EACPN,OAAO,OACPE,QAAQ,MACRD,WAAW,IAEb,cAACH,EAAD,CACEC,MAAOO,EACPN,OAAO,OACPE,QAAQ,MACRD,WAAW,OAIRL,EAAW6B,SAASnB,GAE3B,sBAAKE,UAAU,MAAf,UACE,cAACV,EAAD,CACEC,MAAOO,EAAMW,MAAM,EAAGX,EAAMS,OAAS,GACrCf,OAAO,SACPE,QAAQ,MACRD,WAAW,IAEb,cAACH,EAAD,CACEC,MAAOO,EAAMW,MAAM,EAAGX,EAAMS,OAAS,GACrCf,OAAO,SACPE,QAAQ,MACRD,WAAW,YAbZ,EAoDJyB,CAAapB,OCtJpBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d2051299.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.15983497.svg\";","import React from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport GuitarChord from \"react-guitar-chord\";\nimport search from \"./img/search.svg\";\nconst notes = [\"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\"];\nconst notesMinor = [\n  \"Am\",\n  \"A#m\",\n  \"Bm\",\n  \"Cm\",\n  \"C#m\",\n  \"Dm\",\n  \"D#m\",\n  \"Em\",\n  \"Fm\",\n  \"F#m\",\n  \"Gm\",\n  \"G#m\",\n];\nconst capitalise = (input: any) => {\n  if (String(input).length === 0) return \"\";\n  else if (input.length === 1) return input.toUpperCase();\n  else if (input.length > 1) return input[0].toUpperCase() + input.slice(1);\n  else return null;\n};\nfunction App() {\n  const chordDisplay = (input: any) => {\n    if (input === \"\") {\n      return (\n        <div className=\"multi\">\n          {notes.map((i) => {\n            return (\n              <GuitarChords\n                chord={i}\n                height=\"10em\"\n                quality=\"MAJ\"\n                alternate={false}\n              />\n            );\n          })}\n          {notes.map((i) => {\n            return (\n              <GuitarChords\n                chord={i}\n                height=\"10em\"\n                quality=\"MIN\"\n                alternate={false}\n              />\n            );\n          })}\n          {notes.map((i) => {\n            return (\n              <GuitarChords\n                chord={i}\n                height=\"10em\"\n                alternate={true}\n                quality=\"MAJ\"\n              />\n            );\n          })}\n          {notes.map((i) => {\n            return (\n              <GuitarChords\n                chord={i}\n                height=\"10em\"\n                quality=\"MIN\"\n                alternate={true}\n              />\n            );\n          })}\n        </div>\n      );\n    } else if (notes.includes(input)) {\n      return (\n        <div className=\"multi\">\n          <GuitarChords\n            chord={input}\n            height=\"15em\"\n            quality=\"MAJ\"\n            alternate={false}\n          />\n          <GuitarChords\n            chord={input}\n            height=\"15em\"\n            quality=\"MIN\"\n            alternate={false}\n          />\n          <GuitarChords\n            chord={input}\n            height=\"15em\"\n            quality=\"MAJ\"\n            alternate={true}\n          />\n          <GuitarChords\n            chord={input}\n            height=\"15em\"\n            quality=\"MIN\"\n            alternate={true}\n          />\n        </div>\n      );\n    } else if (notesMinor.includes(input)) {\n      return (\n        <div className=\"two\">\n          <GuitarChords\n            chord={input.slice(0, input.length - 1)}\n            height=\"16.5em\"\n            quality=\"MIN\"\n            alternate={false}\n          />\n          <GuitarChords\n            chord={input.slice(0, input.length - 1)}\n            height=\"16.5em\"\n            quality=\"MIN\"\n            alternate={true}\n          />\n        </div>\n      );\n    }\n  };\n  interface guitarChord {\n    chord: any;\n    height: any;\n    alternate: any;\n    quality: any;\n  }\n\n  const GuitarChords = ({ chord, height, alternate, quality }: guitarChord) => {\n    const [states, setStates] = useState(true);\n    return (\n      <GuitarChord\n        chord={chord}\n        height={height}\n        quality={quality}\n        alternate={alternate}\n        style={{ cursor: \"pointer\" }}\n      />\n    );\n  };\n  const [input, setInput] = useState(\"\");\n  return (\n    <div className=\"ChordHelper\">\n      <div className=\"heading\">Guitar Chords</div>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        className=\"textInput\"\n        value={input}\n        onInput={(event) =>\n          setInput(capitalise((event.target as HTMLInputElement).value))\n        }\n      />\n      <img className=\"searchIcon\" alt=\"searchIcon\" src={search} />\n      {chordDisplay(input)}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}