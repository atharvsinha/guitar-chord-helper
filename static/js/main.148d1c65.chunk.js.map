{"version":3,"sources":["img/search.svg","App.tsx","index.tsx"],"names":["notes","table","multi","name","height","four","two","one","nullTable","notesMinor","App","useState","tableData","setTable","buttonStatus","setButtonStatus","initialLarge","className","chord","alternate","quality","large","setLarge","LargeChord","GuitarChords","id","onClick","style","cursor","input","setInput","type","placeholder","value","onInput","event","String","length","toUpperCase","slice","capitalise","target","alt","src","search","map","i","includes","chordDisplay","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.148d1c65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.15983497.svg\";","import React from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport GuitarChord from \"react-guitar-chord\";\nimport search from \"./img/search.svg\";\nconst notes = [\"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\"];\nconst table = {\n  multi: { name: \"multi\", height: \"10em\" },\n  four: { name: \"four\", height: \"15em\" },\n  two: { name: \"two\", height: \"16.5em\" },\n  one: { name: \"one\", height: \"30em\" },\n};\nconst nullTable = {\n  multi: { name: \"multi\", height: \"0em\" },\n  four: { name: \"four\", height: \"0em\" },\n  two: { name: \"two\", height: \"0em\" },\n  one: { name: \"one\", height: \"0em\" },\n};\nconst notesMinor = [\n  \"Am\",\n  \"A#m\",\n  \"Bm\",\n  \"Cm\",\n  \"C#m\",\n  \"Dm\",\n  \"D#m\",\n  \"Em\",\n  \"Fm\",\n  \"F#m\",\n  \"Gm\",\n  \"G#m\",\n];\nconst capitalise = (input: any) => {\n  if (String(input).length === 0) return \"\";\n  else if (input.length === 1) return input.toUpperCase();\n  else if (input.length > 1) return input[0].toUpperCase() + input.slice(1);\n};\nfunction App() {\n  const [tableData, setTable] = useState(table);\n  const [buttonStatus, setButtonStatus] = useState(\"no-btn\");\n  const chordDisplay = (input: any) => {\n    if (input === \"\") {\n      return (\n        <div className={tableData.multi.name}>\n          {notes.map((i) => {\n            return (\n              <GuitarChords\n                chord={i}\n                height={tableData.multi.height}\n                quality=\"MAJ\"\n                alternate={false}\n              />\n            );\n          })}\n          {notes.map((i) => {\n            return (\n              <GuitarChords\n                chord={i}\n                height={tableData.multi.height}\n                quality=\"MIN\"\n                alternate={false}\n              />\n            );\n          })}\n          {notes.map((i) => {\n            return (\n              <GuitarChords\n                chord={i}\n                height={tableData.multi.height}\n                alternate={true}\n                quality=\"MAJ\"\n              />\n            );\n          })}\n          {notes.map((i) => {\n            return (\n              <GuitarChords\n                chord={i}\n                height={tableData.multi.height}\n                quality=\"MIN\"\n                alternate={true}\n              />\n            );\n          })}\n        </div>\n      );\n    } else if (notes.includes(input)) {\n      return (\n        <div className={tableData.four.name}>\n          <GuitarChords\n            chord={input}\n            height={tableData.four.height}\n            quality=\"MAJ\"\n            alternate={false}\n          />\n          <GuitarChords\n            chord={input}\n            height={tableData.four.height}\n            quality=\"MIN\"\n            alternate={false}\n          />\n          <GuitarChords\n            chord={input}\n            height={tableData.four.height}\n            quality=\"MAJ\"\n            alternate={true}\n          />\n          <GuitarChords\n            chord={input}\n            height={tableData.four.height}\n            quality=\"MIN\"\n            alternate={true}\n          />\n        </div>\n      );\n    } else if (notesMinor.includes(input)) {\n      return (\n        <div className={tableData.two.name}>\n          <GuitarChords\n            chord={input.slice(0, input.length - 1)}\n            height={tableData.two.height}\n            quality=\"MIN\"\n            alternate={false}\n          />\n          <GuitarChords\n            chord={input.slice(0, input.length - 1)}\n            height={tableData.two.height}\n            quality=\"MIN\"\n            alternate={true}\n          />\n        </div>\n      );\n    }\n  };\n  interface guitarChord {\n    chord: any;\n    height: any;\n    alternate: any;\n    quality: any;\n  }\n  const initialLarge = {\n    height: \"0em\",\n    className: \"null\",\n    chord: \"\",\n    alternate: false,\n    quality: \"\",\n  };\n  const [large, setLarge] = useState(initialLarge);\n  const LargeChord = () => {\n    return (\n      <div className={large.className}>\n        <GuitarChord\n          chord={large.chord}\n          quality={large.quality}\n          height={large.height}\n          alternate={large.alternate}\n        />\n      </div>\n    );\n  };\n  const GuitarChords = ({ chord, height, alternate, quality }: guitarChord) => {\n    return (\n      <div\n        className={chord}\n        id=\"chordShape\"\n        onClick={() => {\n          setTable(nullTable);\n          setLarge({\n            height: \"30em\",\n            className: \"enter\",\n            chord: chord,\n            alternate: alternate,\n            quality: quality,\n          });\n          setButtonStatus(\"btn\");\n        }}\n      >\n        <GuitarChord\n          chord={chord}\n          height={height}\n          quality={quality}\n          alternate={alternate}\n          style={{ cursor: \"pointer\" }}\n        />\n      </div>\n    );\n  };\n  const [input, setInput] = useState(\"\");\n  return (\n    <div className=\"ChordHelper\">\n      <div className=\"heading\">Guitar Chords</div>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        className=\"textInput\"\n        value={input}\n        onInput={(event) =>\n          setInput(capitalise((event.target as HTMLInputElement).value))\n        }\n      />\n      <img className=\"searchIcon\" alt=\"searchIcon\" src={search} />\n      {chordDisplay(input)}\n      <LargeChord />\n      <button\n        className={buttonStatus}\n        onClick={() => {\n          {\n            setTable(table);\n            setLarge(initialLarge);\n            setButtonStatus(\"no-btn\");\n            console.log(\"out\");\n          }\n        }}\n      >\n        Back\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}